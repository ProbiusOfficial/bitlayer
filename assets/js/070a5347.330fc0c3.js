"use strict";(self.webpackChunkbitlayer=self.webpackChunkbitlayer||[]).push([[802],{9618:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>s,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>a});var i=l(4848),t=l(8453);const o={},d="Compile and Run",r={id:"build/dev/install",title:"Compile and Run",description:"Download",source:"@site/docs/build/dev/install.md",sourceDirName:"build/dev",slug:"/build/dev/install",permalink:"/bitlayer/docs/build/dev/install",draft:!1,unlisted:!1,editUrl:"https://github.com/bitlayer-org/bitlayer/docs/docs/build/dev/install.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Genesis file",permalink:"/bitlayer/docs/build/dev/genesis"},next:{title:"JSON-RPC API METHODS",permalink:"/bitlayer/docs/build/dev/json-rpc"}},s={},a=[{value:"Download",id:"download",level:2},{value:"Install Golang",id:"install-golang",level:2},{value:"Compile",id:"compile",level:2},{value:"Run",id:"run",level:2},{value:"Deployment",id:"deployment",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"compile-and-run",children:"Compile and Run"}),"\n",(0,i.jsx)(n.h2,{id:"download",children:"Download"}),"\n",(0,i.jsxs)(n.p,{children:["Download source code via ",(0,i.jsx)(n.code,{children:"git"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"git clone https://github.com/bitlayer-org/bitlayer-l2.git\n"})}),"\n",(0,i.jsx)(n.h2,{id:"install-golang",children:"Install Golang"}),"\n",(0,i.jsxs)(n.p,{children:["Reference: ",(0,i.jsx)(n.a,{href:"https://golang.org/doc/install",children:"Go Download and install"})]}),"\n",(0,i.jsx)(n.h2,{id:"compile",children:"Compile"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"cd /path/to/bitlayer-l2\nmake geth\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Compilation is completed, the generated binary is in the folder ",(0,i.jsx)(n.code,{children:"build/bin"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"run",children:"Run"}),"\n",(0,i.jsxs)(n.p,{children:["By running ",(0,i.jsx)(n.code,{children:"./build/bin/geth --help"}),", we can get all ",(0,i.jsx)(n.code,{children:"option"})," info. Specific usage can refer to ",(0,i.jsx)(n.a,{href:"https://geth.ethereum.org/docs/interface/command-line-options",children:"Command-line Options"}),". Besides, it has a custom option as below,"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"--traceaction value     (default: 0) \n    Trace internal tx call/create/suicide action, 0=no trace, 1=trace only native token > 0, 2=trace all\n"})}),"\n",(0,i.jsxs)(n.p,{children:["traceaction option can enable/disable ",(0,i.jsx)(n.a,{href:"/bitlayer/docs/build/dev/json-rpc",children:"the custom json-rpc methods"})]}),"\n",(0,i.jsx)(n.h2,{id:"deployment",children:"Deployment"}),"\n",(0,i.jsxs)(n.p,{children:["please refer ",(0,i.jsx)(n.a,{href:"/bitlayer/docs/build/dev/deploy",children:"deployment"})]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,l)=>{l.d(n,{R:()=>d,x:()=>r});var i=l(6540);const t={},o=i.createContext(t);function d(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);